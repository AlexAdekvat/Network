{"version":3,"sources":["componenst/Profile/ProfileInfo/ProfileInfo.module.css","componenst/Profile/MyPosts/MyPosts.module.css","componenst/Profile/MyPosts/Post/Post.module.css","componenst/Profile/Profile.module.css","assets/images/sea.jpg","componenst/Profile/ProfileInfo/ProfileStatusHooks.jsx","componenst/Profile/ProfileInfo/ProfileFormData.jsx","componenst/Profile/ProfileInfo/ProfileInfo.jsx","componenst/Profile/MyPosts/Post/Post.jsx","componenst/Profile/MyPosts/MyPosts.jsx","componenst/Profile/MyPosts/MyPostsContainer.jsx","componenst/Profile/Profile.jsx","componenst/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","statusContainer","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","aboutMe","btn","save","styles","formSummaryError","infoMe","info","createField","Input","type","TextArea","contact","Object","keys","contacts","map","key","toLowerCase","ProfileData","isOwner","goToEditMode","onClick","edit","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","contactInfo","Contact","ProfileInfo","savePhoto","saveProfile","Loader","descriptionBlock","avatar","for","label","span","src","photos","large","userPhoto","mainPhoto","id","name","target","files","length","input","fullName","initialValues","FormData","then","Post","item","postItem","smallPhoto","user","message","likesCount","MyPosts","React","memo","postsElements","PostData","p","small","postsBlock","myPost","AddNewPostRedux","values","addPost","posts","postData","maxLength10","maxLengthCreator","Field","textAria","component","validate","required","placeholder","MyPostsContainer","connect","state","ProfilePage","newPostText","dispatch","addPostActionCreator","Profile","background","sea","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","Auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.a11e54f8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3g3jl\",\"mainPhoto\":\"ProfileInfo_mainPhoto__3cSH9\",\"avatar\":\"ProfileInfo_avatar__2y-ut\",\"contact\":\"ProfileInfo_contact__1MxKw\",\"label\":\"ProfileInfo_label__2OQzU\",\"input\":\"ProfileInfo_input__2H5JF\",\"span\":\"ProfileInfo_span__2WcO1\",\"name\":\"ProfileInfo_name__3eTmy\",\"statusContainer\":\"ProfileInfo_statusContainer__142nt\",\"infoMe\":\"ProfileInfo_infoMe__HZBg_\",\"info\":\"ProfileInfo_info__2_x-y\",\"btn\":\"ProfileInfo_btn__nL9OJ\",\"edit\":\"ProfileInfo_edit__1qNNf\",\"save\":\"ProfileInfo_save__1EvLS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__wRTd-\",\"postData\":\"MyPosts_postData__2bjpt\",\"textAria\":\"MyPosts_textAria__1fiJj\",\"form\":\"MyPosts_form__34Of9\",\"myPost\":\"MyPosts_myPost__3b0BB\",\"btn\":\"MyPosts_btn__44RpW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__24M2O\",\"postItem\":\"Post_postItem__3rXqN\",\"message\":\"Post_message__3rEv8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"Profile_background__3XjYP\"};","module.exports = __webpack_public_path__ + \"static/media/sea.23863ee1.jpg\";","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport { useState, useEffect } from 'react';\r\n// import Loader from '../../common/preloader/Loader';\r\n\r\nconst ProfileStatusHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status] )\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div className={s.statusContainer}  >\r\n            {!editMode &&\r\n                <div className={s.status}> \r\n                 <b>Status</b>   <span onDoubleClick={activateEditMode}> {props.status || \"HELLO WORLD\"} </span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div className={s.status}>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusHooks;","import React, { useState } from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { createField, Input, TextArea } from \"./../../common/FormControls/FormsControls\"\r\nimport s from './ProfileInfo.module.css';\r\nimport styles from \"./../../common/FormControls/FormsControls.module.css\"\r\n\r\n\r\n\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n    return <form onSubmit={handleSubmit} className={s.aboutMe} >\r\n\r\n        <div className={s.btn}>\r\n            <button className={s.save} >SAVE</button>\r\n        </div>\r\n        {error && < div className={styles.formSummaryError} >\r\n            {error}\r\n        </div>}\r\n        <div className={s.infoMe}>\r\n            <div className={s.info}>\r\n                <b> Full Name</b>: {createField (\"Full name\", \"fullName\", Input, []) }\r\n            </div>\r\n            <div className={s.info}>\r\n                <b> Looking for a job</b>: {createField(\"\", \"lookingForAJob\", Input, [], { type: \"checkbox\" })}\r\n            </div>\r\n            <div className={s.info}>\r\n                <b> My professional skills</b>: {createField(\"My professional skills\", \"lookingForAJobDescription\", TextArea, [])}\r\n            </div>\r\n            <div className={s.info}>\r\n                <b>About Me</b> : {createField(\"About me\", \"aboutMe\", TextArea, [])}\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <div className={s.contact}>\r\n                <b>Contacts</b>:   {Object.keys(profile.contacts).map(key => {\r\n                    return <div key={key} className={s.contact} >\r\n                        <b> {key}: {createField(key, \"contacts.\" + key.toLowerCase(), Input, [])} </b>\r\n                    </div>\r\n\r\n                })}\r\n            </div>\r\n        </div>\r\n    </form>\r\n}\r\n\r\n\r\n\r\nconst ProfileDataReduxForm = reduxForm({ form: 'edit-profile' })(ProfileDataForm)\r\n\r\n\r\nexport default ProfileDataReduxForm;","import React, { useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Loader from '../../common/preloader/Loader';\r\nimport ProfileStatusHooks from './ProfileStatusHooks';\r\nimport userPhoto from '../../../assets/images/user.png';\r\nimport ProfileDataReduxForm from './ProfileFormData';\r\n\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    if (!profile) {\r\n        return <Loader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n    const onSubmit = (FormData) => {\r\n        saveProfile(FormData).then(() => {\r\n            setEditMode(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className={s.descriptionBlock}>\r\n                <div className={s.avatar}>\r\n                    <label for=\"ava\" className={s.label} >\r\n                        <span className={s.span}>Update photo </span>\r\n\r\n                        <img src={profile.photos.large || userPhoto} className={s.mainPhoto} />\r\n                    </label>\r\n                    {isOwner && <input type={\"file\"} id=\"ava\" name=\"ava\" onChange={onMainPhotoSelected} className={s.input} />}\r\n                </div>\r\n                <div className={s.name}>{profile.fullName}</div>\r\n                <ProfileStatusHooks status={status} updateStatus={updateStatus} />\r\n\r\n                {editMode\r\n                    ? <ProfileDataReduxForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n                    : <ProfileData goToEditMode={() => { setEditMode(true) }} profile={profile} isOwner={isOwner} />}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n\r\n    return (\r\n        <div className={s.aboutMe}>\r\n            <div className={s.btn} >\r\n                {isOwner && <button onClick={goToEditMode} className={s.edit}>EDIT  PROFILE INFO</button>}\r\n            </div>\r\n            <div className={s.infoMe}  >\r\n                <div className={s.info}>\r\n                    <b> Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n                </div >\r\n                {profile.lookingForAJob &&\r\n                    <div className={s.info}>\r\n                        <b> My professional skills</b>: {profile.lookingForAJobDescription}\r\n                    </div>}\r\n                <div  className={s.info}>\r\n                    <b>About Me</b> : {profile.aboutMe}\r\n                </div>\r\n            </div>\r\n\r\n            <div className={s.contact}>\r\n                <b>Contacts</b>:   {Object.keys(profile.contacts).map(key => {\r\n                    return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} className={s.contactInfo} />\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    return <div className={s.contact}><b> {contactTitle} </b>: {contactValue}</div>\r\n}\r\n\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport user from './../../../../assets/images/user.png'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <div className={s.postItem}>\r\n                <img src={props.smallPhoto || user}/>\r\n                {/* <img src='https://wallbox.ru/resize/960x854/wallpapers/main2/201725/14978885465947f722ebfc13.12087046.jpg' /> */}\r\n                <div className={s.message}>\r\n                {props.message}\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <span>like</span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {required, maxLengthCreator} from '../../../Utils/Validators'\r\nimport { TextArea } from '../../common/FormControls/FormsControls';\r\nimport Loader from '../../common/preloader/Loader';\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    if(!props.profile){\r\n        return <Loader/>\r\n    }\r\n\r\n    let postsElements = [...props.PostData]\r\n    .map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount} smallPhoto={props.profile.photos.small }/>);\r\n\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.posts);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3 className={s.myPost}>My posts</h3>\r\n            <AddNewPostRedux onSubmit={onAddPost} />\r\n            <div className={s.postData}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPost = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.form} >\r\n            <Field className={s.textAria} component={TextArea} name=\"posts\" validate={[required, maxLength10]} placeholder=\"Anythig new?\"/> \r\n            <div>\r\n                <button className={s.btn}>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostRedux = reduxForm({ form: \"newAddPost\" })(AddNewPost)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { addPostActionCreator } from \"../../../Redux/ProfileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        PostData: state.ProfilePage.PostData,\r\n        newPostText: state.ProfilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (posts) => {\r\n            dispatch(addPostActionCreator(posts));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n\r\n\r\n","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport s from './Profile.module.css';\r\nimport sea from './../../assets/images/sea.jpg'\r\n\r\nconst Profile = (props) => {\r\n    \r\n    return (\r\n        <div >\r\n            <div className={s.background}>\r\n                <img src={sea}/>\r\n            </div >\r\n            <ProfileInfo \r\n                savePhoto={props.savePhoto}\r\n                isOwner={props.isOwner}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                saveProfile={props.saveProfile}\r\n                updateStatus={props.updateStatus} />\r\n            <MyPostsContainer {...props}/> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport * as axios from 'axios'\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from '../../Redux/ProfileReducer';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        };\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                isOwner={!this.props.match.params.userId}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n                savePhoto={this.props.savePhoto} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n        profile: state.ProfilePage.profile,\r\n        status: state.ProfilePage.status,\r\n        authorizedUserId: state.Auth.userId,\r\n        isAuth: state.Auth.isAuth\r\n    })\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n    withRouter,\r\n    //withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n\r\n"],"sourceRoot":""}