{"version":3,"sources":["componenst/Dialogs/Dialogs.module.css","componenst/Dialogs/DialogsItem/DialogsItem.jsx","componenst/Dialogs/Message/Messages.jsx","componenst/Dialogs/Dialogs.jsx","HOC/WithAuthRedirect.js","componenst/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","to","src","user","name","Messages","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","container","onSubmit","handleSubmit","Field","textArea","component","TextArea","validate","required","placeholder","send","btn","Dialogs","state","DialogsPage","dialogsElements","DialogsData","map","d","key","messageElements","MessagesData","m","newMessageBody","isAuth","dialogs","dialogsItems","friend","messages","values","sendMessage","mapStateToPropsForRedirect","Auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"uFACAA,EAAOC,QAAU,CAAC,aAAe,8BAA8B,OAAS,wBAAwB,UAAY,2BAA2B,QAAU,yBAAyB,SAAW,0BAA0B,IAAM,qBAAqB,KAAO,wB,iHCYlOC,EARI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAO,yBAAKC,UAAWC,IAAEC,QACrB,kBAAC,IAAD,CAASC,GAAIL,GAAb,IAAoB,yBAAKM,IAAMC,MAA/B,IAAwCR,EAAMS,QCAvCC,EANE,SAACV,GACd,OAAO,yBAAKG,UAAWC,IAAEO,SACpBX,EAAMW,U,yCCiCTC,EAAcC,YAAiB,IAgB/BC,EAAsBC,YAAU,CAAEC,KAAM,oBAAlBD,EAdL,SAACf,GACpB,OACI,yBAAKG,UAAWC,IAAEa,WACd,0BAAMC,SAAUlB,EAAMmB,cAClB,kBAACC,EAAA,EAAD,CAAOjB,UAAWC,IAAEiB,SAAUC,UAAWC,IAAUC,SAAU,CAACC,IAAUb,GACpEH,KAAK,iBAAiBiB,YAAY,uBAEtC,yBAAKvB,UAAWC,IAAEuB,MACd,4BAAQxB,UAAWC,IAAEwB,KAArB,cAQLC,EA7CC,SAAC7B,GAEb,IAAI8B,EAAQ9B,EAAM+B,YAEdC,EAAkBF,EAAMG,YAAYC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAY1B,KAAM0B,EAAE1B,KAAM2B,IAAKD,EAAEjC,GAAIA,GAAIiC,EAAEjC,QACxFmC,EAAkBP,EAAMQ,aAAaJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAAU5B,QAAS4B,EAAE5B,QAASyB,IAAKG,EAAErC,QAClE4B,EAAMU,eAO3B,OAAKxC,EAAMyC,OAGP,yBAAKtC,UAAWC,IAAEsC,SACd,yBAAKvC,UAAWC,IAAEuC,cACd,yBAAKxC,UAAWC,IAAEwC,QAAlB,IAA4BZ,GAC5B,yBAAK7B,UAAWC,IAAEyC,UAAWR,IAEjC,kBAACvB,EAAD,CAAqBI,SAbT,SAAC4B,GACjB9C,EAAM+C,YAAYD,EAAON,oBAIH,kBAAC,IAAD,CAAUlC,GAAI,Y,wCCnBxC0C,EAA6B,SAAClB,GAAD,MAAY,CACzCW,OAAOX,EAAMmB,KAAKR,S,OCePS,sBACXC,aAfkB,SAACrB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAGF,SAACqB,GACtB,MAAO,CACHL,YAAa,SAACP,GACVY,EAASC,YAAmBb,UDNR,SAACc,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKxD,MAAMyC,OACT,kBAACa,EAAcE,KAAKxD,OADI,kBAAC,IAAD,CAAUM,GAAI,eAHV,GACXmD,IAAMH,WAStC,OAFmCH,YAAQH,EAARG,CAAqCI,KCI7DL,CAGbrB","file":"static/js/4.f7035799.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsItems\":\"Dialogs_dialogsItems__3WUbP\",\"dialog\":\"Dialogs_dialog__3B-i6\",\"container\":\"Dialogs_container__3h7fS\",\"message\":\"Dialogs_message__1OFfN\",\"textArea\":\"Dialogs_textArea__2Ep_d\",\"btn\":\"Dialogs_btn__2ftG5\",\"send\":\"Dialogs_send__NqRnw\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport user from \"./../../../assets/images/user.png\"\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog }>\r\n        <NavLink to={path}> <img src ={user}/> {props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;\r\n\r\n","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Messages = (props) => {\r\n    return <div className={s.message}>\r\n        {props.message}\r\n    </div>\r\n}\r\n\r\nexport default Messages;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogsItem/DialogsItem\";\r\nimport Messages from './Message/Messages';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { TextArea } from '../common/FormControls/FormsControls';\r\nimport { required, maxLengthCreator } from '../../Utils/Validators';\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.DialogsPage;\r\n\r\n    let dialogsElements = state.DialogsData.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n    let messageElements = state.MessagesData.map(m => <Messages message={m.message} key={m.id} />);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"} />;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                <div className={s.friend}> {dialogsElements}</div>\r\n                <div className={s.messages}>{messageElements}</div>\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <div className={s.container}>\r\n            <form onSubmit={props.handleSubmit}  >\r\n                <Field className={s.textArea} component={TextArea} validate={[required, maxLength50]}\r\n                    name=\"newMessageBody\" placeholder=\"Enter your message\" />\r\n\r\n                <div className={s.send}>\r\n                    <button className={s.btn}>Send</button></div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessage\" })(AddMessageForm)\r\n\r\nexport default Dialogs;\r\n\r\n","import React from 'react'\r\nimport { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth:state.Auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectAuthRedirectComponent\r\n}","import React from 'react';\r\nimport { sendMessageCreator } from \"../../Redux/DialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from '../../HOC/WithAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        DialogsPage: state.DialogsPage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}